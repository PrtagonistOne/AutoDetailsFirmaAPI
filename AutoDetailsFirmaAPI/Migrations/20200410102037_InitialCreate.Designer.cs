// <auto-generated />
using System;
using AutoDetailsFirmaDAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoDetailsFirmaAPI.Migrations
{
    [DbContext(typeof(AutoDetailContext))]
    [Migration("20200410102037_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.Detail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleOfDetail")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<DateTime>("DataOfDetail")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupOfDetailId")
                        .HasColumnType("int");

                    b.Property<string>("NameOfDetail")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DetailId");

                    b.HasIndex("GroupOfDetailId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.GroupOfDetail", b =>
                {
                    b.Property<int>("GroupOfDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleOfGroupOfDetail")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<DateTime>("DataOfGroupOfDetail")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotesOfGroupOfDetail")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<double>("PriceOfGroupOfDetail")
                        .HasColumnType("float");

                    b.HasKey("GroupOfDetailId");

                    b.ToTable("GroupOfDetails");
                });

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.Provide", b =>
                {
                    b.Property<int>("ProvideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleOfProvide")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<DateTime>("DataOfProvide")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOFProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdOfDetail")
                        .HasColumnType("int");

                    b.Property<int>("PriceOfProvide")
                        .HasColumnType("int");

                    b.HasKey("ProvideId");

                    b.HasIndex("IdOFProvider");

                    b.HasIndex("IdOfDetail");

                    b.ToTable("Provides");
                });

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProviderAdress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ProviderPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleOfShop")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("NameOfShop")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<double>("PriceOfShop")
                        .HasColumnType("float");

                    b.Property<int>("ProvideId")
                        .HasColumnType("int");

                    b.HasKey("ShopId");

                    b.HasIndex("ProvideId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.Detail", b =>
                {
                    b.HasOne("AutoDetailsFirmaDAL.Entities.GroupOfDetail", "GroupOfDetail")
                        .WithMany("Details")
                        .HasForeignKey("GroupOfDetailId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.Provide", b =>
                {
                    b.HasOne("AutoDetailsFirmaDAL.Entities.Provider", "Provider")
                        .WithMany("Provides")
                        .HasForeignKey("IdOFProvider")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("AutoDetailsFirmaDAL.Entities.Detail", "Detail")
                        .WithMany("Provides")
                        .HasForeignKey("IdOfDetail")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoDetailsFirmaDAL.Entities.Shop", b =>
                {
                    b.HasOne("AutoDetailsFirmaDAL.Entities.Provide", "Provide")
                        .WithMany("Shops")
                        .HasForeignKey("ProvideId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
